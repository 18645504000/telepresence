#!/usr/bin/env python3

from getpass import getuser
import json
import os
import socket
import sys

__version__ = "dev-version"
__api__ = 1


def main():
    try:
        if sys.argv[1] == "version":
            print(f"Playpen Client {__version__}")
    except IndexError:
        pass

    # Connect
    sock = socket.socket(socket.AF_UNIX)
    sockname = "/var/run/playpen.socket"
    try:
        sock.connect(sockname)
    except FileNotFoundError as exc:
        print(f"Connect to {sockname} failed: {exc}")
        print("\nThe server doesn't appear to be running.")
        print("Take a look at /tmp/playpen.log for more information.")
        print("You can start the server using pp-launch.\n")
        exit("playpen: Could not connect to server")

    # Send request
    request = dict(
        env=dict(os.environ),
        user=getuser(),
        args=sys.argv[1:],
        api=__api__,
    )
    out = sock.makefile(mode="w", buffering=1, encoding="utf8")
    json.dump(request, out, indent=2)
    out.close()
    sock.shutdown(socket.SHUT_WR)

    # Display response as it comes in
    token = "-- exit "
    in_ = sock.makefile(mode="r", encoding="utf8")
    for line in in_:
        if line.startswith(token):
            code_str = line.rstrip()[len(token):]
            try:
                code = int(code_str)
            except ValueError:
                code = f"Bad exit code from server: {repr(code_str)}"
            exit(code)
        print(line.rstrip())
    in_.close()
    sock.close()


if __name__ == "__main__":
    main()
